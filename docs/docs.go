// Package docs GENERATED BY SWAG; DO NOT EDIT
// This file was generated by swaggo/swag
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/course/{term}/{number}": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Course"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Term",
                        "name": "term",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Course Number",
                        "name": "number",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.CourseModel"
                        }
                    }
                }
            }
        },
        "/courses/info": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Course"
                ],
                "parameters": [
                    {
                        "description": "Term and Subject are mandatory",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controllers.CourseFunctionParams"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/laundry/{dormitory}": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Laundry"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Dormitory to get laundry data for",
                        "name": "dormitory",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.LaundryObject"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "controllers.CourseFunctionParams": {
            "type": "object",
            "properties": {
                "campus": {
                    "type": "string"
                },
                "courseNumber": {
                    "type": "string"
                },
                "enrollmentStatus": {
                    "type": "string"
                },
                "pageNumber": {
                    "type": "integer"
                },
                "subject": {
                    "type": "string"
                },
                "term": {
                    "type": "string"
                }
            }
        },
        "models.CourseModel": {
            "type": "object",
            "properties": {
                "building": {
                    "type": "string"
                },
                "campus": {
                    "type": "string"
                },
                "career": {
                    "type": "string"
                },
                "classAttributes": {
                    "type": "string"
                },
                "classCapacity": {
                    "type": "integer"
                },
                "classNumber": {
                    "type": "integer"
                },
                "components": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "dropConsent": {
                    "type": "string"
                },
                "endDate": {
                    "type": "string"
                },
                "endDateAndEndTime": {
                    "type": "integer"
                },
                "endTime": {
                    "type": "string"
                },
                "enrollmentRequirements": {
                    "type": "string"
                },
                "grading": {
                    "type": "string"
                },
                "hasTopic": {
                    "type": "boolean"
                },
                "identifier": {
                    "type": "string"
                },
                "instructors": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "location": {
                    "type": "string"
                },
                "meetingDays": {
                    "description": "class details",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "name": {
                    "type": "string"
                },
                "seatsOpen": {
                    "type": "integer"
                },
                "seatsTaken": {
                    "type": "integer"
                },
                "session": {
                    "type": "string"
                },
                "startDate": {
                    "type": "string"
                },
                "startDateAndStartTime": {
                    "type": "integer"
                },
                "startTime": {
                    "type": "string"
                },
                "status": {
                    "description": "class availability",
                    "type": "string"
                },
                "timezone": {
                    "type": "string"
                },
                "topic": {
                    "type": "string"
                },
                "units": {
                    "type": "string"
                },
                "waitListCapacity": {
                    "type": "integer"
                },
                "waitListTotal": {
                    "type": "integer"
                }
            }
        },
        "models.LaundryObject": {
            "type": "object",
            "properties": {
                "appliance": {
                    "type": "string"
                },
                "isInUse": {
                    "type": "boolean"
                },
                "isWorking": {
                    "type": "boolean"
                },
                "location": {
                    "type": "string"
                },
                "timeRemaining": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0.0",
	Host:             "0.0.0.0:8080",
	BasePath:         "/v1/api",
	Schemes:          []string{"http", "https"},
	Title:            "University of Pittsburgh API",
	Description:      "Github: https://github.com/day-mon/Pitt-API-Final",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
